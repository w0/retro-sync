// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: saves.sql

package database

import (
	"context"
)

const createSave = `-- name: CreateSave :one
INSERT INTO
    saves (created_at, updated_at, system_id, filename)
VALUES
    (?, ?, ?, ?) RETURNING id, created_at, updated_at, system_id, filename
`

type CreateSaveParams struct {
	CreatedAt string
	UpdatedAt string
	SystemID  string
	Filename  string
}

func (q *Queries) CreateSave(ctx context.Context, arg CreateSaveParams) (Safe, error) {
	row := q.db.QueryRowContext(ctx, createSave,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.SystemID,
		arg.Filename,
	)
	var i Safe
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.SystemID,
		&i.Filename,
	)
	return i, err
}

const getSave = `-- name: GetSave :one
SELECT
    id, created_at, updated_at, system_id, filename
FROM
    saves
where
    id = ?
`

func (q *Queries) GetSave(ctx context.Context, id int64) (Safe, error) {
	row := q.db.QueryRowContext(ctx, getSave, id)
	var i Safe
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.SystemID,
		&i.Filename,
	)
	return i, err
}
